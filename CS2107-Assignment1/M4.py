from Crypto.Util.number import long_to_bytes

# values
p = 162880061421034531861421621972463534966370354308056523697475287121185543538125799129452708218739269636826880835175165611402696624521334046759529007149315667830227100212567765838968269290487154857637136265221206626542518105457606722081045162403758474066965646151680051129123611342589127830799013937682542852721
q = 110630259294661365339146146165198853280453017194046393089777764628659671749953097591488169272059502695064961358851610982280847387470383207574488643001861726499213624913893116469369214490242569932182709454944948944772924475279384040093026430617908218719226427990105818662891600487594323417138059454631612562029
e = 65537
c = 9896009085935787625758920488269084099639168353511896995394978641958177863703889924686558096075927745393851805944135220750753008476681292034265095455592366954464127999035481224462156732402643136959622498816886339144773669979781335236470286143519674625165278910739123891714614132194713477767098298976729591791097327845554700571186378823528726996492611452964478280183350858621901515053386730632737755877524739931577591148797883391163996911720043188659732866228383832894632461862102103627686192246517012342499864919969532394268989995732633672131252177256441633466374010576837913552604612089984162538022921390505364488718

# secret key d  
d = pow(e, -1, (p - 1) * (q - 1))

# modular inverse
m = pow(c, d, p * q)

print(long_to_bytes(m))